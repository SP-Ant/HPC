# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

## Values you almost certainly want to change
#The Zookeeper servers holding your storm-kafka offsets
zookeeper.servers: "localhost:2181" #Comma separated
#The root path in Zookeeper holding your storm-kafka offsets. This is the value of the transactional.zookeeper.root setting in your storm-kafka topology.
zookeeper.root: "/transactional"
#The ID you set when declaring the Trident stream with TridentDataSource.newStream in your storm-kafka topology.
txid: "streamId"
#The topic name or pattern to migrate. Note that you must use the same name or pattern as used by storm-kafka, it is not supported to migrate e.g. a single topic from a wilcard subscription in storm-kafka.
topic: "test-topic-*"
#True if the topic is a pattern. This has to match the 'kafka.topic.wildcard.match' setting from storm-kafka (false by default).
is.wildcard.topic: true
#The ID you will set when declaring the Trident stream with TridentDataSource.newStream in your storm-kafka-client topology. Please set this to a different value than txid, since otherwise the migration tool will write to the same Zookeeper paths it is reading from. In case you hit errors, it is better if the original data is left untouched. 
new.topology.txid: "storm-kafka-client-streamId"

## Less important defaults
zookeeper.session.timeout.ms: 20000
zookeeper.connection.timeout.ms: 15000
zookeeper.retry.times: 5
zookeeper.retry.interval.ms: 1000